# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import destination_sdk_pb2
from . import common_pb2

class DestinationConnectorStub(object):
    """Fivetran (grpc client) <> DestinationConnector (grpc server)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConfigurationForm = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/ConfigurationForm',
                request_serializer=common_pb2.ConfigurationFormRequest.SerializeToString,
                response_deserializer=common_pb2.ConfigurationFormResponse.FromString,
                )
        self.Capabilities = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/Capabilities',
                request_serializer=destination_sdk_pb2.CapabilitiesRequest.SerializeToString,
                response_deserializer=destination_sdk_pb2.CapabilitiesResponse.FromString,
                )
        self.Test = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/Test',
                request_serializer=common_pb2.TestRequest.SerializeToString,
                response_deserializer=common_pb2.TestResponse.FromString,
                )
        self.DescribeTable = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/DescribeTable',
                request_serializer=destination_sdk_pb2.DescribeTableRequest.SerializeToString,
                response_deserializer=destination_sdk_pb2.DescribeTableResponse.FromString,
                )
        self.CreateTable = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/CreateTable',
                request_serializer=destination_sdk_pb2.CreateTableRequest.SerializeToString,
                response_deserializer=destination_sdk_pb2.CreateTableResponse.FromString,
                )
        self.AlterTable = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/AlterTable',
                request_serializer=destination_sdk_pb2.AlterTableRequest.SerializeToString,
                response_deserializer=destination_sdk_pb2.AlterTableResponse.FromString,
                )
        self.Truncate = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/Truncate',
                request_serializer=destination_sdk_pb2.TruncateRequest.SerializeToString,
                response_deserializer=destination_sdk_pb2.TruncateResponse.FromString,
                )
        self.WriteBatch = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/WriteBatch',
                request_serializer=destination_sdk_pb2.WriteBatchRequest.SerializeToString,
                response_deserializer=destination_sdk_pb2.WriteBatchResponse.FromString,
                )
        self.WriteHistoryBatch = channel.unary_unary(
                '/fivetran_sdk.v2.DestinationConnector/WriteHistoryBatch',
                request_serializer=destination_sdk_pb2.WriteHistoryBatchRequest.SerializeToString,
                response_deserializer=destination_sdk_pb2.WriteBatchResponse.FromString,
                )


class DestinationConnectorServicer(object):
    """Fivetran (grpc client) <> DestinationConnector (grpc server)
    """

    def ConfigurationForm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Capabilities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Test(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AlterTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Truncate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteHistoryBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DestinationConnectorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConfigurationForm': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigurationForm,
                    request_deserializer=common_pb2.ConfigurationFormRequest.FromString,
                    response_serializer=common_pb2.ConfigurationFormResponse.SerializeToString,
            ),
            'Capabilities': grpc.unary_unary_rpc_method_handler(
                    servicer.Capabilities,
                    request_deserializer=destination_sdk_pb2.CapabilitiesRequest.FromString,
                    response_serializer=destination_sdk_pb2.CapabilitiesResponse.SerializeToString,
            ),
            'Test': grpc.unary_unary_rpc_method_handler(
                    servicer.Test,
                    request_deserializer=common_pb2.TestRequest.FromString,
                    response_serializer=common_pb2.TestResponse.SerializeToString,
            ),
            'DescribeTable': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeTable,
                    request_deserializer=destination_sdk_pb2.DescribeTableRequest.FromString,
                    response_serializer=destination_sdk_pb2.DescribeTableResponse.SerializeToString,
            ),
            'CreateTable': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTable,
                    request_deserializer=destination_sdk_pb2.CreateTableRequest.FromString,
                    response_serializer=destination_sdk_pb2.CreateTableResponse.SerializeToString,
            ),
            'AlterTable': grpc.unary_unary_rpc_method_handler(
                    servicer.AlterTable,
                    request_deserializer=destination_sdk_pb2.AlterTableRequest.FromString,
                    response_serializer=destination_sdk_pb2.AlterTableResponse.SerializeToString,
            ),
            'Truncate': grpc.unary_unary_rpc_method_handler(
                    servicer.Truncate,
                    request_deserializer=destination_sdk_pb2.TruncateRequest.FromString,
                    response_serializer=destination_sdk_pb2.TruncateResponse.SerializeToString,
            ),
            'WriteBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteBatch,
                    request_deserializer=destination_sdk_pb2.WriteBatchRequest.FromString,
                    response_serializer=destination_sdk_pb2.WriteBatchResponse.SerializeToString,
            ),
            'WriteHistoryBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteHistoryBatch,
                    request_deserializer=destination_sdk_pb2.WriteHistoryBatchRequest.FromString,
                    response_serializer=destination_sdk_pb2.WriteBatchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fivetran_sdk.v2.DestinationConnector', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DestinationConnector(object):
    """Fivetran (grpc client) <> DestinationConnector (grpc server)
    """

    @staticmethod
    def ConfigurationForm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/ConfigurationForm',
            common_pb2.ConfigurationFormRequest.SerializeToString,
            common_pb2.ConfigurationFormResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Capabilities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/Capabilities',
            destination_sdk_pb2.CapabilitiesRequest.SerializeToString,
            destination_sdk_pb2.CapabilitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Test(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/Test',
            common_pb2.TestRequest.SerializeToString,
            common_pb2.TestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/DescribeTable',
            destination_sdk_pb2.DescribeTableRequest.SerializeToString,
            destination_sdk_pb2.DescribeTableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/CreateTable',
            destination_sdk_pb2.CreateTableRequest.SerializeToString,
            destination_sdk_pb2.CreateTableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AlterTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/AlterTable',
            destination_sdk_pb2.AlterTableRequest.SerializeToString,
            destination_sdk_pb2.AlterTableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Truncate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/Truncate',
            destination_sdk_pb2.TruncateRequest.SerializeToString,
            destination_sdk_pb2.TruncateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/WriteBatch',
            destination_sdk_pb2.WriteBatchRequest.SerializeToString,
            destination_sdk_pb2.WriteBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteHistoryBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fivetran_sdk.v2.DestinationConnector/WriteHistoryBatch',
            destination_sdk_pb2.WriteHistoryBatchRequest.SerializeToString,
            destination_sdk_pb2.WriteBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
